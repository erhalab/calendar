// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.6.20'
    ext {
        buildConfig = [
                minSdk      : 28,
                minSdkJsr310: 28,
                compileSdk  : 32,
                targetSdk   : 32,
        ]
        versions = [
                androidxCore         : '1.7.0',
                androidxCustomView   : '1.1.0',
                androidxjUnit        : '1.1.1',
                androidxTestRunner   : '1.2.0',
                appCompat            : '1.4.1',
                coreLibraryDesugaring: '1.1.5',
                emoji                : '1.1.0',
                jodaTime             : '2.10.14',
                jodaTimeAndroid      : '2.10.14',
                jUnit                : '4.13.2',
                kotlin               : '1.6.20',
                mockito              : '3.8.0',
                mockitoKotlin        : '2.2.0',
                robolectric          : '4.3.1',
                startup              : '1.0.0',
                threeTen             : '1.5.0',
                threeTenAbp          : '1.3.0',
                truth                : '1.1.2',
        ]
        libraries = [
                androidxCore         : "androidx.core:core-ktx:${versions.androidxCore}",
                androidxCustomView   : "androidx.customview:customview:${versions.androidxCustomView}",
                appCompat            : "androidx.appcompat:appcompat:${versions.appCompat}",
                coreLibraryDesugaring: "com.android.tools:desugar_jdk_libs:${versions.coreLibraryDesugaring}",
                emoji                : "androidx.emoji:emoji-bundled:${versions.emoji}",
                jodaTime             : "joda-time:joda-time:${versions.jodaTime}",
                jodaTimeAndroid      : "net.danlew:android.joda:${versions.jodaTimeAndroid}",
                kotlin               : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",
                startup              : "androidx.startup:startup-runtime:${versions.startup}",
                threeTen             : "org.threeten:threetenbp:${versions.threeTen}",
                threeTenAbp          : "com.jakewharton.threetenabp:threetenabp:${versions.threeTenAbp}",
        ]
        testing = [
                androidxjUnit     : "androidx.test.ext:junit:${versions.androidxjUnit}",
                androidxTestRunner: "androidx.test:runner:${versions.androidxTestRunner}",
                jUnit             : "junit:junit:${versions.jUnit}",
                mockitoCore       : "org.mockito:mockito-core:${versions.mockito}",
                mockitoInline     : "org.mockito:mockito-inline:${versions.mockito}",
                mockitoKotlin     : "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin",
                robolectric       : "org.robolectric:robolectric:${versions.robolectric}",
                truth             : "com.google.truth:truth:${versions.truth}",
        ]
    }
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        gradlePluginPortal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url "https://s01.oss.sonatype.org/content/groups/public" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'org.jlleitschuh.gradle:ktlint-gradle:10.0.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.38.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = '1.8'
            freeCompilerArgs = ['-XXLanguage:+InlineClasses']
        }
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        gradlePluginPortal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'org.jlleitschuh.gradle.ktlint'
//    apply plugin: 'com.android.library'
//    apply plugin: 'kotlin-android'
//    apply plugin: 'kotlin-parcelize'
}

task clean(type: Delete) {
    delete rootProject.buildDir
    delete fileTree('app/release') {
        include '/*.*'
    }
}